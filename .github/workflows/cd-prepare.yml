# This workflow will build a docker container, publish and deploy it to Tencent Kubernetes Engine (TKE) when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Tencent Kubernetes Engine cluster,
#    including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace:
#    - TENCENT_CLOUD_SECRET_ID with Tencent Cloud secret id
#    - TENCENT_CLOUD_SECRET_KEY with Tencent Cloud secret key
#    - TENCENT_CLOUD_ACCOUNT_ID with Tencent Cloud account id
#    - TKE_REGISTRY_PASSWORD with TKE registry password
#
# 3. Change the values for the TKE_IMAGE_URL, TKE_REGION, TKE_CLUSTER_ID and DEPLOYMENT_NAME environment variables (below).

name: ArgoCd-Prepare

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "chart/Chart.yaml"

env:
  TKE_IMAGE_URL: ccr.ccs.tencentyun.com/lwabish/gitops
  TKE_REGION: ap-guangzhou
  TKE_CLUSTER_ID: cls-mywebapp
  DEPLOYMENT_NAME: tke-test

jobs:
  setup-build-publish-deploy:
    name: Image&Chart
    runs-on: ubuntu-latest
    environment: production
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Install package
      run: |
        sudo snap install yq

    - name: Build Docker image
      run: |
        docker build -t ${TKE_IMAGE_URL}:${GITHUB_SHA} .

    - name: Login TKE Registry
      run: |
        docker login -u ${{ secrets.TENCENT_CLOUD_ACCOUNT_ID }} -p '${{ secrets.TKE_REGISTRY_PASSWORD }}' ${TKE_IMAGE_URL}

    - name: Publish
      run: |
        docker push ${TKE_IMAGE_URL}:${GITHUB_SHA}

    - name: persist version
      run: |
        yq -i ".appVersion = \"${GITHUB_SHA}\"" ./chart/Chart.yaml
        git config --global user.email "wubw@pku.edu.cn"
        git config --global user.name "github action"
        git add ./chart/Chart.yaml
        git commit -m "Update Chart Version to ${GITHUB_SHA}"
        git push

#     - name: Set up Kustomize
#       run: |
#         curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
#         chmod u+x ./kustomize

#     - name: Set up ~/.kube/config for connecting TKE cluster
#       uses: TencentCloud/tke-cluster-credential-action@v1
#       with:
#         secret_id: ${{ secrets.TENCENT_CLOUD_SECRET_ID }}
#         secret_key: ${{ secrets.TENCENT_CLOUD_SECRET_KEY }}
#         tke_region: ${{ env.TKE_REGION }}
#         cluster_id: ${{ env.TKE_CLUSTER_ID }}

#     - name: Switch to TKE context
#       run: |
#         kubectl config use-context ${TKE_CLUSTER_ID}-context-default

#     # Deploy the Docker image to the TKE cluster
#     - name: Deploy
#       run: |
#         ./kustomize edit set image ${TKE_IMAGE_URL}:${GITHUB_SHA}
#         ./kustomize build . | kubectl apply -f -
#         kubectl rollout status deployment/${DEPLOYMENT_NAME}
#         kubectl get services -o wide
